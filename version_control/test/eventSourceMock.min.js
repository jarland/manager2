define(["lodash"],function(_){"use strict";var ReadyStateType={created:0,opened:1,closed:2};var defaultConfig={withCredentials:false};var defaultEventSource;var sources={};function _getSource(url){var source=sources[url];if(!source){throw"Attempted to use an EventSource that was not registered: "+url}return source}function _fireEvent(source,eventName,event){var listeners=source.events[eventName];if(listeners){listeners.forEach(function(listener){if(typeof listener==="function"){listener(event)}})}}return{install:function(){if(defaultEventSource){throw"EventSource is already mocked."}defaultEventSource=window.EventSource;window.EventSource=function EventSourceMock(url,config){this.url=url;this.config=config||defaultConfig;this.readyState=ReadyStateType.created;this.onopen=null;this.onerror=null;this.onmessage=null;this.events={};this.addEventListener=function(eventName,listener){if(!this.events[eventName]){this.events[eventName]=[]}this.events[eventName].push(listener)};this.removeEventListener=function(eventName,listener){if(!this.events[eventName]){throw"Attempted to remove an unregistered event listener: "+eventName}_.remove(this.events[eventName],listener)};this.close=function(){this.readyState=ReadyStateType.closed};sources[url]=this;return this}},emitError:function(url,error){var source=_getSource(url);if(typeof source.onerror==="function"){source.onerror(error)}},emitOpen:function(url){var source=_getSource(url);source.readyState=ReadyStateType.opened;if(typeof source.onopen==="function"){source.onopen()}},emitMessage:function(url,eventName,data){var source=_getSource(url);var event={type:eventName,data:data};if(typeof source.onmessage==="function"){source.onmessage(event)}_fireEvent(source,eventName,event)},uninstall:function(){if(!defaultEventSource){throw"EventSource is not mocked."}window.EventSource=defaultEventSource;defaultEventSource=null},get:function(url){return _getSource(url)}}});